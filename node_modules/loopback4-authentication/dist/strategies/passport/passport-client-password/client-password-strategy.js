"use strict";
// Type definitions for passport-oauth2-client-password 0.1.2
// Project: https://github.com/jaredhanson/passport-oauth2-client-password
// Definitions by: Ivan Zubok <https://github.com/akaNightmare>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.3
Object.defineProperty(exports, "__esModule", { value: true });
exports.Strategy = void 0;
const tslib_1 = require("tslib");
const passport = tslib_1.__importStar(require("passport"));
class Strategy extends passport.Strategy {
    constructor(verify, options) {
        super();
        if (!verify)
            throw new Error('OAuth 2.0 client password strategy requires a verify function');
        this.verify = verify;
        if (options)
            this.passReqToCallback = options.passReqToCallback;
        this.name = 'oauth2-client-password';
    }
    authenticate(req, options) {
        var _a;
        if (!((_a = req === null || req === void 0 ? void 0 : req.body) === null || _a === void 0 ? void 0 : _a.client_id)) {
            return this.fail();
        }
        const clientId = req.body['client_id'];
        const clientSecret = req.body['client_secret'];
        const verified = (err, client, info) => {
            if (err) {
                return this.error(err);
            }
            if (!client) {
                return this.fail();
            }
            this.success(client, info);
        };
        if (this.passReqToCallback) {
            this.verify(clientId, clientSecret, verified, req);
        }
        else {
            this.verify(clientId, clientSecret, verified);
        }
    }
}
exports.Strategy = Strategy;
//# sourceMappingURL=client-password-strategy.js.map