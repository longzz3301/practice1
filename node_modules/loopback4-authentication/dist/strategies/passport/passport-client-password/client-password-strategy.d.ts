import * as passport from 'passport';
import * as express from 'express';
import { IAuthClient, IAuthSecureClient } from '../../../types';
export interface StrategyOptionsWithRequestInterface {
    passReqToCallback: boolean;
}
export interface VerifyFunctionWithRequest {
    (clientId: string, clientSecret: string | undefined, done: (error: Error | null, client?: IAuthSecureClient | IAuthClient | null, info?: Object | undefined) => void, req?: express.Request): void;
}
export declare class Strategy extends passport.Strategy {
    constructor(verify: VerifyFunctionWithRequest, options?: StrategyOptionsWithRequestInterface);
    private readonly verify;
    private readonly passReqToCallback;
    name: string;
    authenticate(req: express.Request, options?: {}): void;
}
